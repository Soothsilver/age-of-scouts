R: Gendarme.Rules.Performance.AvoidConcatenatingCharsRule
M: System.Byte[] SDL2.SDL::UTF8_ToNative(System.String)
M: System.IntPtr SDL2.SDL::INTERNAL_AllocUTF8(System.String)

R: Gendarme.Rules.Design.Generic.AvoidDeclaringCustomDelegatesRule
T: SDL2.SDL/SDL_WinRT_mainFunction
T: SDL2.SDL/SDL_LogOutputFunction
T: SDL2.SDL/SDL_HitTest
T: SDL2.SDL/SDL_EventFilter
T: SDL2.SDL/SDL_AudioCallback
T: SDL2.SDL/SDL_TimerCallback
T: SDL2.SDL_mixer/MixFuncDelegate
T: SDL2.SDL_mixer/Mix_EffectFunc_t
T: SDL2.SDL_mixer/Mix_EffectDone_t
T: SDL2.SDL_mixer/MusicFinishedDelegate
T: SDL2.SDL_mixer/ChannelFinishedDelegate
T: SDL2.SDL_mixer/SoundFontDelegate

R: Gendarme.Rules.Performance.AvoidLargeStructureRule
T: SDL2.SDL/SDL_PixelFormat
T: SDL2.SDL/SDL_Surface
T: SDL2.SDL/SDL_MouseMotionEvent
T: SDL2.SDL/SDL_TouchFingerEvent
T: SDL2.SDL/SDL_MultiGestureEvent
T: SDL2.SDL/SDL_DollarGestureEvent
T: SDL2.SDL/SDL_Event
T: SDL2.SDL/SDL_HapticPeriodic
T: SDL2.SDL/SDL_HapticCondition
T: SDL2.SDL/SDL_HapticRamp
T: SDL2.SDL/SDL_HapticCustom
T: SDL2.SDL/SDL_HapticEffect
T: SDL2.SDL/INTERNAL_SysWMDriverUnion
T: SDL2.SDL/SDL_SysWMinfo

R: Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule
T: SDL2.SDL
M: System.UInt32 SDL2.SDL::SDL_FOURCC(System.Byte,System.Byte,System.Byte,System.Byte)
M: System.IntPtr SDL2.SDL::SDL_RWFromMem(System.IntPtr,System.Int32)
M: System.Void SDL2.SDL::SDL_SetMainReady()
M: System.Int32 SDL2.SDL::SDL_WinRTRunApp(SDL2.SDL/SDL_WinRT_mainFunction,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_Init(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_InitSubSystem(System.UInt32)
M: System.Void SDL2.SDL::SDL_Quit()
M: System.Void SDL2.SDL::SDL_QuitSubSystem(System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_WasInit(System.UInt32)
M: System.String SDL2.SDL::SDL_GetPlatform()
M: System.Void SDL2.SDL::SDL_ClearHints()
M: System.String SDL2.SDL::SDL_GetHint(System.String)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_SetHint(System.String,System.String)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_SetHintWithPriority(System.String,System.String,SDL2.SDL/SDL_HintPriority)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetHintBoolean(System.String,SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::SDL_ClearError()
M: System.String SDL2.SDL::SDL_GetError()
M: System.Void SDL2.SDL::SDL_SetError(System.String)
M: System.Void SDL2.SDL::SDL_Log(System.String)
M: System.Void SDL2.SDL::SDL_LogVerbose(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogDebug(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogInfo(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogWarn(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogError(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogCritical(System.Int32,System.String)
M: System.Void SDL2.SDL::SDL_LogMessage(System.Int32,SDL2.SDL/SDL_LogPriority,System.String)
M: System.Void SDL2.SDL::SDL_LogMessageV(System.Int32,SDL2.SDL/SDL_LogPriority,System.String)
M: SDL2.SDL/SDL_LogPriority SDL2.SDL::SDL_LogGetPriority(System.Int32)
M: System.Void SDL2.SDL::SDL_LogSetPriority(System.Int32,SDL2.SDL/SDL_LogPriority)
M: System.Void SDL2.SDL::SDL_LogSetAllPriority(SDL2.SDL/SDL_LogPriority)
M: System.Void SDL2.SDL::SDL_LogResetPriorities()
M: System.Void SDL2.SDL::SDL_LogGetOutputFunction(SDL2.SDL/SDL_LogOutputFunction&,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_LogSetOutputFunction(SDL2.SDL/SDL_LogOutputFunction,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_ShowMessageBox(SDL2.SDL/SDL_MessageBoxData&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_ShowSimpleMessageBox(SDL2.SDL/SDL_MessageBoxFlags,System.String,System.String,System.IntPtr)
M: System.Void SDL2.SDL::SDL_VERSION(SDL2.SDL/SDL_version&)
M: System.Int32 SDL2.SDL::SDL_VERSIONNUM(System.Int32,System.Int32,System.Int32)
M: System.Boolean SDL2.SDL::SDL_VERSION_ATLEAST(System.Int32,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_GetVersion(SDL2.SDL/SDL_version&)
M: System.String SDL2.SDL::SDL_GetRevision()
M: System.Int32 SDL2.SDL::SDL_GetRevisionNumber()
M: System.Int32 SDL2.SDL::SDL_WINDOWPOS_UNDEFINED_DISPLAY(System.Int32)
M: System.Boolean SDL2.SDL::SDL_WINDOWPOS_ISUNDEFINED(System.Int32)
M: System.Int32 SDL2.SDL::SDL_WINDOWPOS_CENTERED_DISPLAY(System.Int32)
M: System.Boolean SDL2.SDL::SDL_WINDOWPOS_ISCENTERED(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SDL2.SDL/SDL_WindowFlags)
M: System.Int32 SDL2.SDL::SDL_CreateWindowAndRenderer(System.Int32,System.Int32,SDL2.SDL/SDL_WindowFlags,System.IntPtr&,System.IntPtr&)
M: System.IntPtr SDL2.SDL::SDL_CreateWindowFrom(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DisableScreenSaver()
M: System.Void SDL2.SDL::SDL_EnableScreenSaver()
M: System.IntPtr SDL2.SDL::SDL_GetClosestDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_GetCurrentDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.String SDL2.SDL::SDL_GetCurrentVideoDriver()
M: System.Int32 SDL2.SDL::SDL_GetDesktopDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.String SDL2.SDL::SDL_GetDisplayName(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetDisplayBounds(System.Int32,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayDPI(System.Int32,System.Single&,System.Single&,System.Single&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayMode(System.Int32,System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayUsableBounds(System.Int32,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetNumDisplayModes(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumVideoDisplays()
M: System.Int32 SDL2.SDL::SDL_GetNumVideoDrivers()
M: System.String SDL2.SDL::SDL_GetVideoDriver(System.Int32)
M: System.Single SDL2.SDL::SDL_GetWindowBrightness(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowOpacity(System.IntPtr,System.Single)
M: System.Int32 SDL2.SDL::SDL_GetWindowOpacity(System.IntPtr,System.Single&)
M: System.Int32 SDL2.SDL::SDL_SetWindowModalFor(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowInputFocus(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetWindowData(System.IntPtr,System.String)
M: System.Int32 SDL2.SDL::SDL_GetWindowDisplayIndex(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetWindowDisplayMode(System.IntPtr,SDL2.SDL/SDL_DisplayMode&)
M: System.UInt32 SDL2.SDL::SDL_GetWindowFlags(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetWindowFromID(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_GetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetWindowGrab(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetWindowID(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetWindowPixelFormat(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GetWindowMaximumSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowMinimumSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowPosition(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL::SDL_GetWindowSurface(System.IntPtr)
M: System.String SDL2.SDL::SDL_GetWindowTitle(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GL_BindTexture(System.IntPtr,System.Single&,System.Single&)
M: System.IntPtr SDL2.SDL::SDL_GL_CreateContext(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GL_DeleteContext(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GL_GetProcAddress(System.String)
M: System.IntPtr SDL2.SDL::SDL_GL_GetProcAddress(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GL_ExtensionSupported(System.String)
M: System.Void SDL2.SDL::SDL_GL_ResetAttributes()
M: System.Int32 SDL2.SDL::SDL_GL_GetAttribute(SDL2.SDL/SDL_GLattr,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GL_GetSwapInterval()
M: System.Int32 SDL2.SDL::SDL_GL_MakeCurrent(System.IntPtr,System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GL_GetCurrentWindow()
M: System.IntPtr SDL2.SDL::SDL_GL_GetCurrentContext()
M: System.Void SDL2.SDL::SDL_GL_GetDrawableSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GL_SetAttribute(SDL2.SDL/SDL_GLattr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_GL_SetSwapInterval(System.Int32)
M: System.Void SDL2.SDL::SDL_GL_SwapWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GL_UnbindTexture(System.IntPtr)
M: System.Void SDL2.SDL::SDL_HideWindow(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsScreenSaverEnabled()
M: System.Void SDL2.SDL::SDL_MaximizeWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_MinimizeWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_RaiseWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_RestoreWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowBrightness(System.IntPtr,System.Single)
M: System.IntPtr SDL2.SDL::SDL_SetWindowData(System.IntPtr,System.String,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowDisplayMode(System.IntPtr,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_SetWindowFullscreen(System.IntPtr,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_SetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])
M: System.Void SDL2.SDL::SDL_SetWindowGrab(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::SDL_SetWindowIcon(System.IntPtr,System.IntPtr)
M: System.Void SDL2.SDL::SDL_SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowBordered(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_GetWindowBordersSize(System.IntPtr,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_SetWindowResizable(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::SDL_SetWindowTitle(System.IntPtr,System.String)
M: System.Void SDL2.SDL::SDL_ShowWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateWindowSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateWindowSurfaceRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_VideoInit(System.String)
M: System.Void SDL2.SDL::SDL_VideoQuit()
M: System.Int32 SDL2.SDL::SDL_SetWindowHitTest(System.IntPtr,SDL2.SDL/SDL_HitTest,System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetGrabbedWindow()
M: SDL2.SDL/SDL_BlendMode SDL2.SDL::SDL_ComposeCustomBlendMode(SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendOperation,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendOperation)
M: System.Int32 SDL2.SDL::SDL_Vulkan_LoadLibrary(System.String)
M: System.IntPtr SDL2.SDL::SDL_Vulkan_GetVkGetInstanceProcAddr()
M: System.Void SDL2.SDL::SDL_Vulkan_UnloadLibrary()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32&,System.IntPtr[])
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_Vulkan_CreateSurface(System.IntPtr,System.IntPtr,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_Vulkan_GetDrawableSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL::SDL_CreateRenderer(System.IntPtr,System.Int32,SDL2.SDL/SDL_RendererFlags)
M: System.IntPtr SDL2.SDL::SDL_CreateSoftwareRenderer(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_CreateTexture(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateTextureFromSurface(System.IntPtr,System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyRenderer(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyTexture(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetNumRenderDrivers()
M: System.Int32 SDL2.SDL::SDL_GetRenderDrawBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetRenderDrawColor(System.IntPtr,System.Byte&,System.Byte&,System.Byte&,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetRenderDriverInfo(System.Int32,SDL2.SDL/SDL_RendererInfo&)
M: System.IntPtr SDL2.SDL::SDL_GetRenderer(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetRendererInfo(System.IntPtr,SDL2.SDL/SDL_RendererInfo&)
M: System.Int32 SDL2.SDL::SDL_GetRendererOutputSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GetTextureAlphaMod(System.IntPtr,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetTextureBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetTextureColorMod(System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_LockTexture(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_LockTexture(System.IntPtr,System.IntPtr,System.IntPtr&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_QueryTexture(System.IntPtr,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_RenderClear(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawLines(System.IntPtr,SDL2.SDL/SDL_Point[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawPoint(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawPoints(System.IntPtr,SDL2.SDL/SDL_Point[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderFillRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderFillRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderFillRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Void SDL2.SDL::SDL_RenderGetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_RenderGetLogicalSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_RenderGetScale(System.IntPtr,System.Single&,System.Single&)
M: System.Int32 SDL2.SDL::SDL_RenderGetViewport(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_RenderPresent(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderReadPixels(System.IntPtr,SDL2.SDL/SDL_Rect&,System.UInt32,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderSetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderSetClipRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderSetLogicalSize(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderSetScale(System.IntPtr,System.Single,System.Single)
M: System.Int32 SDL2.SDL::SDL_RenderSetIntegerScale(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_RenderSetViewport(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_SetRenderDrawBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetRenderTarget(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetTextureAlphaMod(System.IntPtr,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetTextureBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.Void SDL2.SDL::SDL_UnlockTexture(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateTexture(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_UpdateTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RenderTargetSupported(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetRenderTarget(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RenderIsClipEnabled(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_DEFINE_PIXELFOURCC(System.Byte,System.Byte,System.Byte,System.Byte)
M: System.UInt32 SDL2.SDL::SDL_DEFINE_PIXELFORMAT(SDL2.SDL/SDL_PIXELTYPE_ENUM,SDL2.SDL/SDL_PIXELORDER_ENUM,SDL2.SDL/SDL_PACKEDLAYOUT_ENUM,System.Byte,System.Byte)
M: System.Byte SDL2.SDL::SDL_PIXELFLAG(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELTYPE(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELORDER(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELLAYOUT(System.UInt32)
M: System.Byte SDL2.SDL::SDL_BITSPERPIXEL(System.UInt32)
M: System.Byte SDL2.SDL::SDL_BYTESPERPIXEL(System.UInt32)
M: System.Boolean SDL2.SDL::SDL_ISPIXELFORMAT_INDEXED(System.UInt32)
M: System.Boolean SDL2.SDL::SDL_ISPIXELFORMAT_ALPHA(System.UInt32)
M: System.Boolean SDL2.SDL::SDL_ISPIXELFORMAT_FOURCC(System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_AllocFormat(System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_AllocPalette(System.Int32)
M: System.Void SDL2.SDL::SDL_CalculateGammaRamp(System.Single,System.UInt16[])
M: System.Void SDL2.SDL::SDL_FreeFormat(System.IntPtr)
M: System.Void SDL2.SDL::SDL_FreePalette(System.IntPtr)
M: System.String SDL2.SDL::SDL_GetPixelFormatName(System.UInt32)
M: System.Void SDL2.SDL::SDL_GetRGB(System.UInt32,System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.Void SDL2.SDL::SDL_GetRGBA(System.UInt32,System.IntPtr,System.Byte&,System.Byte&,System.Byte&,System.Byte&)
M: System.UInt32 SDL2.SDL::SDL_MapRGB(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.UInt32 SDL2.SDL::SDL_MapRGBA(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
M: System.UInt32 SDL2.SDL::SDL_MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_PixelFormatEnumToMasks(System.UInt32,System.Int32&,System.UInt32&,System.UInt32&,System.UInt32&,System.UInt32&)
M: System.Int32 SDL2.SDL::SDL_SetPaletteColors(System.IntPtr,SDL2.SDL/SDL_Color[],System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SetPixelFormatPalette(System.IntPtr,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_PointInRect(SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_EnclosePoints(SDL2.SDL/SDL_Point[],System.Int32,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasIntersection(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRectAndLine(SDL2.SDL/SDL_Rect&,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RectEmpty(SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RectEquals(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_UnionRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.Boolean SDL2.SDL::SDL_MUSTLOCK(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_ConvertPixels(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_ConvertSurface(System.IntPtr,System.IntPtr,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_ConvertSurfaceFormat(System.IntPtr,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceWithFormat(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceWithFormatFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRect(System.IntPtr,SDL2.SDL/SDL_Rect&,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRect(System.IntPtr,System.IntPtr,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32,System.UInt32)
M: System.Void SDL2.SDL::SDL_FreeSurface(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetColorKey(System.IntPtr,System.UInt32&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceAlphaMod(System.IntPtr,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceColorMod(System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.IntPtr SDL2.SDL::SDL_LoadBMP(System.String)
M: System.Int32 SDL2.SDL::SDL_LockSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_LowerBlit(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_LowerBlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_SaveBMP(System.IntPtr,System.String)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_SetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_SetColorKey(System.IntPtr,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceAlphaMod(System.IntPtr,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetSurfacePalette(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceRLE(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SoftStretch(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_UnlockSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpperBlit(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_UpperBlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.IntPtr SDL2.SDL::SDL_DuplicateSurface(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasClipboardText()
M: System.String SDL2.SDL::SDL_GetClipboardText()
M: System.Int32 SDL2.SDL::SDL_SetClipboardText(System.String)
M: System.Void SDL2.SDL::SDL_PumpEvents()
M: System.Int32 SDL2.SDL::SDL_PeepEvents(SDL2.SDL/SDL_Event[],System.Int32,SDL2.SDL/SDL_eventaction,SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasEvent(SDL2.SDL/SDL_EventType)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasEvents(SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: System.Void SDL2.SDL::SDL_FlushEvent(SDL2.SDL/SDL_EventType)
M: System.Void SDL2.SDL::SDL_FlushEvents(SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: System.Int32 SDL2.SDL::SDL_PollEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEventTimeout(SDL2.SDL/SDL_Event&,System.Int32)
M: System.Int32 SDL2.SDL::SDL_PushEvent(SDL2.SDL/SDL_Event&)
M: System.Void SDL2.SDL::SDL_SetEventFilter(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetEventFilter(SDL2.SDL/SDL_EventFilter&,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_AddEventWatch(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Void SDL2.SDL::SDL_DelEventWatch(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Void SDL2.SDL::SDL_FilterEvents(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Byte SDL2.SDL::SDL_EventState(SDL2.SDL/SDL_EventType,System.Int32)
M: System.Byte SDL2.SDL::SDL_GetEventState(SDL2.SDL/SDL_EventType)
M: System.UInt32 SDL2.SDL::SDL_RegisterEvents(System.Int32)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::SDL_SCANCODE_TO_KEYCODE(SDL2.SDL/SDL_Scancode)
M: System.IntPtr SDL2.SDL::SDL_GetKeyboardFocus()
M: System.IntPtr SDL2.SDL::SDL_GetKeyboardState(System.Int32&)
M: SDL2.SDL/SDL_Keymod SDL2.SDL::SDL_GetModState()
M: System.Void SDL2.SDL::SDL_SetModState(SDL2.SDL/SDL_Keymod)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::SDL_GetKeyFromScancode(SDL2.SDL/SDL_Scancode)
M: SDL2.SDL/SDL_Scancode SDL2.SDL::SDL_GetScancodeFromKey(SDL2.SDL/SDL_Keycode)
M: System.String SDL2.SDL::SDL_GetScancodeName(SDL2.SDL/SDL_Scancode)
M: SDL2.SDL/SDL_Scancode SDL2.SDL::SDL_GetScancodeFromName(System.String)
M: System.String SDL2.SDL::SDL_GetKeyName(SDL2.SDL/SDL_Keycode)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::SDL_GetKeyFromName(System.String)
M: System.Void SDL2.SDL::SDL_StartTextInput()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsTextInputActive()
M: System.Void SDL2.SDL::SDL_StopTextInput()
M: System.Void SDL2.SDL::SDL_SetTextInputRect(SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasScreenKeyboardSupport()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsScreenKeyboardShown(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetMouseFocus()
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.Int32&,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.IntPtr,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.Int32&,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.IntPtr,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.Int32&,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.IntPtr,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.Int32&,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.IntPtr,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetRelativeMouseState(System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_WarpMouseInWindow(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_WarpMouseGlobal(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SetRelativeMouseMode(SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_CaptureMouse(SDL2.SDL/SDL_bool)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetRelativeMouseMode()
M: System.IntPtr SDL2.SDL::SDL_CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateSystemCursor(SDL2.SDL/SDL_SystemCursor)
M: System.Void SDL2.SDL::SDL_SetCursor(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetCursor()
M: System.Void SDL2.SDL::SDL_FreeCursor(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_ShowCursor(System.Int32)
M: System.UInt32 SDL2.SDL::SDL_BUTTON(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_GetNumTouchDevices()
M: System.Int64 SDL2.SDL::SDL_GetTouchDevice(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumTouchFingers(System.Int64)
M: System.IntPtr SDL2.SDL::SDL_GetTouchFinger(System.Int64,System.Int32)
M: System.Void SDL2.SDL::SDL_JoystickClose(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickEventState(System.Int32)
M: System.Int16 SDL2.SDL::SDL_JoystickGetAxis(System.IntPtr,System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_JoystickGetAxisInitialState(System.IntPtr,System.Int32,System.UInt16&)
M: System.Int32 SDL2.SDL::SDL_JoystickGetBall(System.IntPtr,System.Int32,System.Int32&,System.Int32&)
M: System.Byte SDL2.SDL::SDL_JoystickGetButton(System.IntPtr,System.Int32)
M: System.Byte SDL2.SDL::SDL_JoystickGetHat(System.IntPtr,System.Int32)
M: System.String SDL2.SDL::SDL_JoystickName(System.IntPtr)
M: System.String SDL2.SDL::SDL_JoystickNameForIndex(System.Int32)
M: System.Int32 SDL2.SDL::SDL_JoystickNumAxes(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumBalls(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumButtons(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumHats(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_JoystickOpen(System.Int32)
M: System.Void SDL2.SDL::SDL_JoystickUpdate()
M: System.Int32 SDL2.SDL::SDL_NumJoysticks()
M: System.Guid SDL2.SDL::SDL_JoystickGetDeviceGUID(System.Int32)
M: System.Guid SDL2.SDL::SDL_JoystickGetGUID(System.IntPtr)
M: System.Void SDL2.SDL::SDL_JoystickGetGUIDString(System.Guid,System.Byte[],System.Int32)
M: System.Guid SDL2.SDL::SDL_JoystickGetGUIDFromString(System.String)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceVendor(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceProduct(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceProductVersion(System.Int32)
M: SDL2.SDL/SDL_JoystickType SDL2.SDL::SDL_JoystickGetDeviceType(System.Int32)
M: System.Int32 SDL2.SDL::SDL_JoystickGetDeviceInstanceID(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetVendor(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetProduct(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetProductVersion(System.IntPtr)
M: SDL2.SDL/SDL_JoystickType SDL2.SDL::SDL_JoystickGetType(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_JoystickGetAttached(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickInstanceID(System.IntPtr)
M: SDL2.SDL/SDL_JoystickPowerLevel SDL2.SDL::SDL_JoystickCurrentPowerLevel(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_JoystickFromInstanceID(System.Int32)
M: System.Void SDL2.SDL::SDL_LockJoysticks()
M: System.Void SDL2.SDL::SDL_UnlockJoysticks()
M: System.Int32 SDL2.SDL::SDL_GameControllerAddMapping(System.String)
M: System.Int32 SDL2.SDL::SDL_GameControllerNumMappings()
M: System.String SDL2.SDL::SDL_GameControllerMappingForIndex(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GameControllerAddMappingsFromFile(System.String)
M: System.String SDL2.SDL::SDL_GameControllerMappingForGUID(System.Guid)
M: System.String SDL2.SDL::SDL_GameControllerMapping(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsGameController(System.Int32)
M: System.String SDL2.SDL::SDL_GameControllerNameForIndex(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_GameControllerOpen(System.Int32)
M: System.String SDL2.SDL::SDL_GameControllerName(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetVendor(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetProduct(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetProductVersion(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GameControllerGetAttached(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GameControllerGetJoystick(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GameControllerEventState(System.Int32)
M: System.Void SDL2.SDL::SDL_GameControllerUpdate()
M: SDL2.SDL/SDL_GameControllerAxis SDL2.SDL::SDL_GameControllerGetAxisFromString(System.String)
M: System.String SDL2.SDL::SDL_GameControllerGetStringForAxis(SDL2.SDL/SDL_GameControllerAxis)
M: SDL2.SDL/SDL_GameControllerButtonBind SDL2.SDL::SDL_GameControllerGetBindForAxis(System.IntPtr,SDL2.SDL/SDL_GameControllerAxis)
M: System.Int16 SDL2.SDL::SDL_GameControllerGetAxis(System.IntPtr,SDL2.SDL/SDL_GameControllerAxis)
M: SDL2.SDL/SDL_GameControllerButton SDL2.SDL::SDL_GameControllerGetButtonFromString(System.String)
M: System.String SDL2.SDL::SDL_GameControllerGetStringForButton(SDL2.SDL/SDL_GameControllerButton)
M: SDL2.SDL/SDL_GameControllerButtonBind SDL2.SDL::SDL_GameControllerGetBindForButton(System.IntPtr,SDL2.SDL/SDL_GameControllerButton)
M: System.Byte SDL2.SDL::SDL_GameControllerGetButton(System.IntPtr,SDL2.SDL/SDL_GameControllerButton)
M: System.Void SDL2.SDL::SDL_GameControllerClose(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GameControllerFromInstanceID(System.Int32)
M: System.Void SDL2.SDL::SDL_HapticClose(System.IntPtr)
M: System.Void SDL2.SDL::SDL_HapticDestroyEffect(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticEffectSupported(System.IntPtr,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_HapticGetEffectStatus(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticIndex(System.IntPtr)
M: System.String SDL2.SDL::SDL_HapticName(System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticNewEffect(System.IntPtr,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_HapticNumAxes(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticNumEffects(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticNumEffectsPlaying(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_HapticOpen(System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticOpened(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_HapticOpenFromJoystick(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_HapticOpenFromMouse()
M: System.Int32 SDL2.SDL::SDL_HapticPause(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_HapticQuery(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleInit(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumblePlay(System.IntPtr,System.Single,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleStop(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleSupported(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRunEffect(System.IntPtr,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_HapticSetAutocenter(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticSetGain(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticStopAll(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticStopEffect(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticUnpause(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticUpdateEffect(System.IntPtr,System.Int32,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_JoystickIsHaptic(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_MouseIsHaptic()
M: System.Int32 SDL2.SDL::SDL_NumHaptics()
M: System.UInt16 SDL2.SDL::SDL_AUDIO_BITSIZE(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISFLOAT(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISBIGENDIAN(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISSIGNED(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISINT(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISLITTLEENDIAN(System.UInt16)
M: System.Boolean SDL2.SDL::SDL_AUDIO_ISUNSIGNED(System.UInt16)
M: System.Int32 SDL2.SDL::SDL_AudioInit(System.String)
M: System.Void SDL2.SDL::SDL_AudioQuit()
M: System.Void SDL2.SDL::SDL_CloseAudio()
M: System.Void SDL2.SDL::SDL_CloseAudioDevice(System.UInt32)
M: System.Void SDL2.SDL::SDL_FreeWAV(System.IntPtr)
M: System.String SDL2.SDL::SDL_GetAudioDeviceName(System.Int32,System.Int32)
M: SDL2.SDL/SDL_AudioStatus SDL2.SDL::SDL_GetAudioDeviceStatus(System.UInt32)
M: System.String SDL2.SDL::SDL_GetAudioDriver(System.Int32)
M: SDL2.SDL/SDL_AudioStatus SDL2.SDL::SDL_GetAudioStatus()
M: System.String SDL2.SDL::SDL_GetCurrentAudioDriver()
M: System.Int32 SDL2.SDL::SDL_GetNumAudioDevices(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumAudioDrivers()
M: SDL2.SDL/SDL_AudioSpec SDL2.SDL::SDL_LoadWAV(System.String,SDL2.SDL/SDL_AudioSpec&,System.IntPtr&,System.UInt32&)
M: System.Void SDL2.SDL::SDL_LockAudio()
M: System.Void SDL2.SDL::SDL_LockAudioDevice(System.UInt32)
M: System.Void SDL2.SDL::SDL_MixAudio(System.Byte[],System.Byte[],System.UInt32,System.Int32)
M: System.Void SDL2.SDL::SDL_MixAudioFormat(System.Byte[],System.Byte[],System.UInt16,System.UInt32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_OpenAudio(SDL2.SDL/SDL_AudioSpec&,SDL2.SDL/SDL_AudioSpec&)
M: System.Int32 SDL2.SDL::SDL_OpenAudio(SDL2.SDL/SDL_AudioSpec&,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_OpenAudioDevice(System.String,System.Int32,SDL2.SDL/SDL_AudioSpec&,SDL2.SDL/SDL_AudioSpec&,System.Int32)
M: System.Void SDL2.SDL::SDL_PauseAudio(System.Int32)
M: System.Void SDL2.SDL::SDL_PauseAudioDevice(System.UInt32,System.Int32)
M: System.Void SDL2.SDL::SDL_UnlockAudio()
M: System.Void SDL2.SDL::SDL_UnlockAudioDevice(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_QueueAudio(System.UInt32,System.IntPtr,System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_DequeueAudio(System.UInt32,System.IntPtr,System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_GetQueuedAudioSize(System.UInt32)
M: System.Void SDL2.SDL::SDL_ClearQueuedAudio(System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_NewAudioStream(System.UInt16,System.Byte,System.Int32,System.UInt16,System.Byte,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamPut(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamGet(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamAvailable(System.IntPtr)
M: System.Void SDL2.SDL::SDL_AudioStreamClear(System.IntPtr)
M: System.Void SDL2.SDL::SDL_FreeAudioStream(System.IntPtr)
M: System.Boolean SDL2.SDL::SDL_TICKS_PASSED(System.UInt32,System.UInt32)
M: System.Void SDL2.SDL::SDL_Delay(System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_GetTicks()
M: System.UInt64 SDL2.SDL::SDL_GetPerformanceCounter()
M: System.UInt64 SDL2.SDL::SDL_GetPerformanceFrequency()
M: System.Int32 SDL2.SDL::SDL_AddTimer(System.UInt32,SDL2.SDL/SDL_TimerCallback,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RemoveTimer(System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetWindowWMInfo(System.IntPtr,SDL2.SDL/SDL_SysWMinfo&)
M: System.String SDL2.SDL::SDL_GetBasePath()
M: System.String SDL2.SDL::SDL_GetPrefPath(System.String,System.String)
M: SDL2.SDL/SDL_PowerState SDL2.SDL::SDL_GetPowerInfo(System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GetCPUCount()
M: System.Int32 SDL2.SDL::SDL_GetSystemRAM()
T: SDL2.SDL/SDL_bool
T: SDL2.SDL/SDL_WinRT_mainFunction
T: SDL2.SDL/SDL_HintPriority
T: SDL2.SDL/SDL_LogPriority
T: SDL2.SDL/SDL_LogOutputFunction
T: SDL2.SDL/SDL_MessageBoxFlags
T: SDL2.SDL/SDL_MessageBoxButtonFlags
T: SDL2.SDL/SDL_MessageBoxButtonData
T: SDL2.SDL/SDL_MessageBoxColor
T: SDL2.SDL/SDL_MessageBoxColorType
T: SDL2.SDL/SDL_MessageBoxColorScheme
T: SDL2.SDL/SDL_MessageBoxData
T: SDL2.SDL/SDL_version
T: SDL2.SDL/SDL_GLattr
T: SDL2.SDL/SDL_GLprofile
T: SDL2.SDL/SDL_GLcontext
T: SDL2.SDL/SDL_WindowEventID
T: SDL2.SDL/SDL_WindowFlags
T: SDL2.SDL/SDL_HitTestResult
T: SDL2.SDL/SDL_DisplayMode
T: SDL2.SDL/SDL_HitTest
T: SDL2.SDL/SDL_BlendMode
T: SDL2.SDL/SDL_BlendOperation
T: SDL2.SDL/SDL_BlendFactor
T: SDL2.SDL/SDL_RendererFlags
T: SDL2.SDL/SDL_RendererFlip
T: SDL2.SDL/SDL_TextureAccess
T: SDL2.SDL/SDL_TextureModulate
T: SDL2.SDL/SDL_RendererInfo
T: SDL2.SDL/SDL_PIXELTYPE_ENUM
T: SDL2.SDL/SDL_PIXELORDER_ENUM
T: SDL2.SDL/SDL_PACKEDLAYOUT_ENUM
T: SDL2.SDL/SDL_Color
T: SDL2.SDL/SDL_Palette
T: SDL2.SDL/SDL_PixelFormat
T: SDL2.SDL/SDL_Point
T: SDL2.SDL/SDL_Rect
T: SDL2.SDL/SDL_Surface
T: SDL2.SDL/SDL_EventType
T: SDL2.SDL/SDL_MouseWheelDirection
T: SDL2.SDL/SDL_GenericEvent
T: SDL2.SDL/SDL_WindowEvent
T: SDL2.SDL/SDL_KeyboardEvent
T: SDL2.SDL/SDL_TextEditingEvent
T: SDL2.SDL/SDL_TextInputEvent
T: SDL2.SDL/SDL_MouseMotionEvent
T: SDL2.SDL/SDL_MouseButtonEvent
T: SDL2.SDL/SDL_MouseWheelEvent
T: SDL2.SDL/SDL_JoyAxisEvent
T: SDL2.SDL/SDL_JoyBallEvent
T: SDL2.SDL/SDL_JoyHatEvent
T: SDL2.SDL/SDL_JoyButtonEvent
T: SDL2.SDL/SDL_JoyDeviceEvent
T: SDL2.SDL/SDL_ControllerAxisEvent
T: SDL2.SDL/SDL_ControllerButtonEvent
T: SDL2.SDL/SDL_ControllerDeviceEvent
T: SDL2.SDL/SDL_AudioDeviceEvent
T: SDL2.SDL/SDL_TouchFingerEvent
T: SDL2.SDL/SDL_MultiGestureEvent
T: SDL2.SDL/SDL_DollarGestureEvent
T: SDL2.SDL/SDL_DropEvent
T: SDL2.SDL/SDL_QuitEvent
T: SDL2.SDL/SDL_UserEvent
T: SDL2.SDL/SDL_SysWMEvent
T: SDL2.SDL/SDL_Event
T: SDL2.SDL/SDL_EventFilter
T: SDL2.SDL/SDL_eventaction
T: SDL2.SDL/SDL_Scancode
T: SDL2.SDL/SDL_Keycode
T: SDL2.SDL/SDL_Keymod
T: SDL2.SDL/SDL_Keysym
T: SDL2.SDL/SDL_SystemCursor
T: SDL2.SDL/SDL_Finger
T: SDL2.SDL/SDL_JoystickPowerLevel
T: SDL2.SDL/SDL_JoystickType
T: SDL2.SDL/SDL_GameControllerBindType
T: SDL2.SDL/SDL_GameControllerAxis
T: SDL2.SDL/SDL_GameControllerButton
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_hat
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_union
T: SDL2.SDL/SDL_GameControllerButtonBind
T: SDL2.SDL/SDL_HapticDirection
T: SDL2.SDL/SDL_HapticConstant
T: SDL2.SDL/SDL_HapticPeriodic
T: SDL2.SDL/SDL_HapticCondition
T: SDL2.SDL/SDL_HapticRamp
T: SDL2.SDL/SDL_HapticLeftRight
T: SDL2.SDL/SDL_HapticCustom
T: SDL2.SDL/SDL_HapticEffect
T: SDL2.SDL/SDL_AudioStatus
T: SDL2.SDL/SDL_AudioSpec
T: SDL2.SDL/SDL_AudioCallback
T: SDL2.SDL/SDL_TimerCallback
T: SDL2.SDL/SDL_SYSWM_TYPE
T: SDL2.SDL/INTERNAL_windows_wminfo
T: SDL2.SDL/INTERNAL_winrt_wminfo
T: SDL2.SDL/INTERNAL_x11_wminfo
T: SDL2.SDL/INTERNAL_directfb_wminfo
T: SDL2.SDL/INTERNAL_cocoa_wminfo
T: SDL2.SDL/INTERNAL_uikit_wminfo
T: SDL2.SDL/INTERNAL_wayland_wminfo
T: SDL2.SDL/INTERNAL_mir_wminfo
T: SDL2.SDL/INTERNAL_android_wminfo
T: SDL2.SDL/INTERNAL_SysWMDriverUnion
T: SDL2.SDL/SDL_SysWMinfo
T: SDL2.SDL/SDL_PowerState
T: SDL2.SDL_image
M: System.Void SDL2.SDL_image::SDL_IMAGE_VERSION(SDL2.SDL/SDL_version&)
M: SDL2.SDL/SDL_version SDL2.SDL_image::IMG_Linked_Version()
M: System.Int32 SDL2.SDL_image::IMG_Init(SDL2.SDL_image/IMG_InitFlags)
M: System.Void SDL2.SDL_image::IMG_Quit()
M: System.IntPtr SDL2.SDL_image::IMG_Load(System.String)
M: System.IntPtr SDL2.SDL_image::IMG_Load_RW(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_image::IMG_LoadTyped_RW(System.IntPtr,System.Int32,System.String)
M: System.IntPtr SDL2.SDL_image::IMG_LoadTexture(System.IntPtr,System.String)
M: System.IntPtr SDL2.SDL_image::IMG_LoadTexture_RW(System.IntPtr,System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_image::IMG_LoadTextureTyped_RW(System.IntPtr,System.IntPtr,System.Int32,System.String)
M: System.IntPtr SDL2.SDL_image::IMG_ReadXPMFromArray(System.String[])
M: System.Int32 SDL2.SDL_image::IMG_SavePNG(System.IntPtr,System.String)
M: System.Int32 SDL2.SDL_image::IMG_SavePNG_RW(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_image::IMG_SaveJPG(System.IntPtr,System.String,System.Int32)
M: System.Int32 SDL2.SDL_image::IMG_SaveJPG_RW(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
T: SDL2.SDL_image/IMG_InitFlags
T: SDL2.SDL_mixer
M: System.Void SDL2.SDL_mixer::SDL_MIXER_VERSION(SDL2.SDL/SDL_version&)
M: SDL2.SDL/SDL_version SDL2.SDL_mixer::MIX_Linked_Version()
M: System.Int32 SDL2.SDL_mixer::Mix_Init(SDL2.SDL_mixer/MIX_InitFlags)
M: System.Void SDL2.SDL_mixer::Mix_Quit()
M: System.Int32 SDL2.SDL_mixer::Mix_OpenAudio(System.Int32,System.UInt16,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_AllocateChannels(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_QuerySpec(System.Int32&,System.UInt16&,System.Int32&)
M: System.IntPtr SDL2.SDL_mixer::Mix_LoadWAV_RW(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_mixer::Mix_LoadWAV(System.String)
M: System.IntPtr SDL2.SDL_mixer::Mix_LoadMUS(System.String)
M: System.IntPtr SDL2.SDL_mixer::Mix_QuickLoad_WAV(System.Byte[])
M: System.IntPtr SDL2.SDL_mixer::Mix_QuickLoad_RAW(System.Byte[],System.UInt32)
M: System.Void SDL2.SDL_mixer::Mix_FreeChunk(System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_FreeMusic(System.IntPtr)
M: System.Int32 SDL2.SDL_mixer::Mix_GetNumChunkDecoders()
M: System.String SDL2.SDL_mixer::Mix_GetChunkDecoder(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GetNumMusicDecoders()
M: System.String SDL2.SDL_mixer::Mix_GetMusicDecoder(System.Int32)
M: SDL2.SDL_mixer/Mix_MusicType SDL2.SDL_mixer::Mix_GetMusicType(System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_SetPostMix(SDL2.SDL_mixer/MixFuncDelegate,System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_HookMusic(SDL2.SDL_mixer/MixFuncDelegate,System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_HookMusicFinished(SDL2.SDL_mixer/MusicFinishedDelegate)
M: System.IntPtr SDL2.SDL_mixer::Mix_GetMusicHookData()
M: System.Void SDL2.SDL_mixer::Mix_ChannelFinished(SDL2.SDL_mixer/ChannelFinishedDelegate)
M: System.Int32 SDL2.SDL_mixer::Mix_RegisterEffect(System.Int32,SDL2.SDL_mixer/Mix_EffectFunc_t,SDL2.SDL_mixer/Mix_EffectDone_t,System.IntPtr)
M: System.Int32 SDL2.SDL_mixer::Mix_UnregisterEffect(System.Int32,SDL2.SDL_mixer/Mix_EffectFunc_t)
M: System.Int32 SDL2.SDL_mixer::Mix_UnregisterAllEffects(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_SetPanning(System.Int32,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetPosition(System.Int32,System.Int16,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetDistance(System.Int32,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetReverseStereo(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_ReserveChannels(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupChannels(System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupAvailable(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupCount(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupOldest(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupNewer(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayChannel(System.Int32,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayMusic(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInMusic(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInMusicPos(System.IntPtr,System.Int32,System.Int32,System.Double)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInChannel(System.Int32,System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_Volume(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_VolumeChunk(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_VolumeMusic(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltChannel(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltGroup(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_ExpireChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutGroup(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutMusic(System.Int32)
M: SDL2.SDL_mixer/Mix_Fading SDL2.SDL_mixer::Mix_FadingMusic()
M: SDL2.SDL_mixer/Mix_Fading SDL2.SDL_mixer::Mix_FadingChannel(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_Pause(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_Resume(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_Paused(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_PauseMusic()
M: System.Void SDL2.SDL_mixer::Mix_ResumeMusic()
M: System.Void SDL2.SDL_mixer::Mix_RewindMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_PausedMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_SetMusicPosition(System.Double)
M: System.Int32 SDL2.SDL_mixer::Mix_Playing(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayingMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_SetMusicCMD(System.String)
M: System.Int32 SDL2.SDL_mixer::Mix_SetSynchroValue(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GetSynchroValue()
M: System.Int32 SDL2.SDL_mixer::Mix_SetSoundFonts(System.String)
M: System.String SDL2.SDL_mixer::Mix_GetSoundFonts()
M: System.Int32 SDL2.SDL_mixer::Mix_EachSoundFont(SDL2.SDL_mixer/SoundFontDelegate,System.IntPtr)
M: System.IntPtr SDL2.SDL_mixer::Mix_GetChunk(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_CloseAudio()
T: SDL2.SDL_mixer/MIX_InitFlags
T: SDL2.SDL_mixer/Mix_Fading
T: SDL2.SDL_mixer/Mix_MusicType
T: SDL2.SDL_mixer/Mix_EffectFunc_t
T: SDL2.SDL_mixer/Mix_EffectDone_t
T: SDL2.SDL_ttf
M: System.Void SDL2.SDL_ttf::SDL_TTF_VERSION(SDL2.SDL/SDL_version&)
M: SDL2.SDL/SDL_version SDL2.SDL_ttf::TTF_LinkedVersion()
M: System.Void SDL2.SDL_ttf::TTF_ByteSwappedUNICODE(System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_Init()
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFont(System.String,System.Int32)
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFontRW(System.IntPtr,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFontIndex(System.String,System.Int32,System.Int64)
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFontIndexRW(System.IntPtr,System.Int32,System.Int32,System.Int64)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontStyle(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontStyle(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontOutline(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontOutline(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontHinting(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontHinting(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_FontHeight(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontAscent(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontDescent(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontLineSkip(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontKerning(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontKerning(System.IntPtr,System.Int32)
M: System.Int64 SDL2.SDL_ttf::TTF_FontFaces(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontFaceIsFixedWidth(System.IntPtr)
M: System.String SDL2.SDL_ttf::TTF_FontFaceFamilyName(System.IntPtr)
M: System.String SDL2.SDL_ttf::TTF_FontFaceStyleName(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_GlyphIsProvided(System.IntPtr,System.UInt16)
M: System.Int32 SDL2.SDL_ttf::TTF_GlyphMetrics(System.IntPtr,System.UInt16,System.Int32&,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeText(System.IntPtr,System.String,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::INTERNAL_TTF_SizeUTF8(System.IntPtr,System.Byte[],System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeUTF8(System.IntPtr,System.String,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeUNICODE(System.IntPtr,System.String,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Solid(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUTF8_Solid(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Solid(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Solid(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Shaded(System.IntPtr,System.String,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUTF8_Shaded(System.IntPtr,System.String,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Shaded(System.IntPtr,System.String,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Shaded(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Blended(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUTF8_Blended(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Blended(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUTF8_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Blended(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color)
M: System.Void SDL2.SDL_ttf::TTF_CloseFont(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_Quit()
M: System.Int32 SDL2.SDL_ttf::TTF_WasInit()
M: System.Int32 SDL2.SDL_ttf::SDL_GetFontKerningSize(System.IntPtr,System.Int32,System.Int32)

R: Gendarme.Rules.Design.AvoidRefAndOutParametersRule
M: System.Void SDL2.SDL::SDL_LogGetOutputFunction(SDL2.SDL/SDL_LogOutputFunction&,System.IntPtr&)
M: System.Int32 SDL2.SDL::SDL_ShowMessageBox(SDL2.SDL/SDL_MessageBoxData&,System.Int32&)
M: System.Void SDL2.SDL::SDL_VERSION(SDL2.SDL/SDL_version&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_PointInRect(SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RectEmpty(SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RectEquals(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetEventFilter(SDL2.SDL/SDL_EventFilter&,System.IntPtr&)
M: SDL2.SDL/SDL_AudioSpec SDL2.SDL::SDL_LoadWAV(System.String,SDL2.SDL/SDL_AudioSpec&,System.IntPtr&,System.UInt32&)
M: System.UInt32 SDL2.SDL::SDL_OpenAudioDevice(System.String,System.Int32,SDL2.SDL/SDL_AudioSpec&,SDL2.SDL/SDL_AudioSpec&,System.Int32)
M: System.Void SDL2.SDL_image::SDL_IMAGE_VERSION(SDL2.SDL/SDL_version&)
M: System.Void SDL2.SDL_mixer::SDL_MIXER_VERSION(SDL2.SDL/SDL_version&)
M: System.Void SDL2.SDL_ttf::SDL_TTF_VERSION(SDL2.SDL/SDL_version&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeUTF8(System.IntPtr,System.String,System.Int32&,System.Int32&)

R: Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule
M: System.Void SDL2.SDL::.cctor()

R: Gendarme.Rules.Performance.AvoidUnusedPrivateFieldsRule
T: SDL2.SDL/SDL_WindowEvent
T: SDL2.SDL/SDL_KeyboardEvent
T: SDL2.SDL/SDL_MouseMotionEvent
T: SDL2.SDL/SDL_MouseButtonEvent
T: SDL2.SDL/SDL_JoyAxisEvent
T: SDL2.SDL/SDL_JoyBallEvent
T: SDL2.SDL/SDL_JoyHatEvent
T: SDL2.SDL/SDL_JoyButtonEvent
T: SDL2.SDL/SDL_ControllerAxisEvent
T: SDL2.SDL/SDL_ControllerButtonEvent
T: SDL2.SDL/SDL_AudioDeviceEvent

R: Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule
T: SDL2.SDL
T: SDL2.SDL_image
T: SDL2.SDL_mixer
T: SDL2.SDL_ttf

R: Gendarme.Rules.Design.AvoidVisibleFieldsRule
T: SDL2.SDL/SDL_MessageBoxButtonData
T: SDL2.SDL/SDL_MessageBoxColor
T: SDL2.SDL/SDL_MessageBoxColorScheme
T: SDL2.SDL/SDL_MessageBoxData
T: SDL2.SDL/SDL_version
T: SDL2.SDL/SDL_DisplayMode
T: SDL2.SDL/SDL_RendererInfo
T: SDL2.SDL/SDL_Color
T: SDL2.SDL/SDL_Palette
T: SDL2.SDL/SDL_PixelFormat
T: SDL2.SDL/SDL_Point
T: SDL2.SDL/SDL_Rect
T: SDL2.SDL/SDL_Surface
T: SDL2.SDL/SDL_GenericEvent
T: SDL2.SDL/SDL_WindowEvent
T: SDL2.SDL/SDL_KeyboardEvent
T: SDL2.SDL/SDL_TextEditingEvent
T: SDL2.SDL/SDL_TextInputEvent
T: SDL2.SDL/SDL_MouseMotionEvent
T: SDL2.SDL/SDL_MouseButtonEvent
T: SDL2.SDL/SDL_MouseWheelEvent
T: SDL2.SDL/SDL_JoyAxisEvent
T: SDL2.SDL/SDL_JoyBallEvent
T: SDL2.SDL/SDL_JoyHatEvent
T: SDL2.SDL/SDL_JoyButtonEvent
T: SDL2.SDL/SDL_JoyDeviceEvent
T: SDL2.SDL/SDL_ControllerAxisEvent
T: SDL2.SDL/SDL_ControllerButtonEvent
T: SDL2.SDL/SDL_ControllerDeviceEvent
T: SDL2.SDL/SDL_AudioDeviceEvent
T: SDL2.SDL/SDL_TouchFingerEvent
T: SDL2.SDL/SDL_MultiGestureEvent
T: SDL2.SDL/SDL_DollarGestureEvent
T: SDL2.SDL/SDL_DropEvent
T: SDL2.SDL/SDL_QuitEvent
T: SDL2.SDL/SDL_UserEvent
T: SDL2.SDL/SDL_SysWMEvent
T: SDL2.SDL/SDL_Event
T: SDL2.SDL/SDL_Keysym
T: SDL2.SDL/SDL_Finger
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_hat
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_union
T: SDL2.SDL/SDL_GameControllerButtonBind
T: SDL2.SDL/SDL_HapticDirection
T: SDL2.SDL/SDL_HapticConstant
T: SDL2.SDL/SDL_HapticPeriodic
T: SDL2.SDL/SDL_HapticCondition
T: SDL2.SDL/SDL_HapticRamp
T: SDL2.SDL/SDL_HapticLeftRight
T: SDL2.SDL/SDL_HapticCustom
T: SDL2.SDL/SDL_HapticEffect
T: SDL2.SDL/SDL_AudioSpec
T: SDL2.SDL/INTERNAL_windows_wminfo
T: SDL2.SDL/INTERNAL_winrt_wminfo
T: SDL2.SDL/INTERNAL_x11_wminfo
T: SDL2.SDL/INTERNAL_directfb_wminfo
T: SDL2.SDL/INTERNAL_cocoa_wminfo
T: SDL2.SDL/INTERNAL_uikit_wminfo
T: SDL2.SDL/INTERNAL_wayland_wminfo
T: SDL2.SDL/INTERNAL_mir_wminfo
T: SDL2.SDL/INTERNAL_android_wminfo
T: SDL2.SDL/INTERNAL_SysWMDriverUnion
T: SDL2.SDL/SDL_SysWMinfo

R: Gendarme.Rules.Design.AvoidVisibleNestedTypesRule
T: SDL2.SDL/SDL_bool
T: SDL2.SDL/SDL_WinRT_mainFunction
T: SDL2.SDL/SDL_HintPriority
T: SDL2.SDL/SDL_LogPriority
T: SDL2.SDL/SDL_LogOutputFunction
T: SDL2.SDL/SDL_MessageBoxFlags
T: SDL2.SDL/SDL_MessageBoxButtonFlags
T: SDL2.SDL/SDL_MessageBoxButtonData
T: SDL2.SDL/SDL_MessageBoxColor
T: SDL2.SDL/SDL_MessageBoxColorType
T: SDL2.SDL/SDL_MessageBoxColorScheme
T: SDL2.SDL/SDL_MessageBoxData
T: SDL2.SDL/SDL_version
T: SDL2.SDL/SDL_GLattr
T: SDL2.SDL/SDL_GLprofile
T: SDL2.SDL/SDL_GLcontext
T: SDL2.SDL/SDL_WindowEventID
T: SDL2.SDL/SDL_WindowFlags
T: SDL2.SDL/SDL_HitTestResult
T: SDL2.SDL/SDL_DisplayMode
T: SDL2.SDL/SDL_HitTest
T: SDL2.SDL/SDL_BlendMode
T: SDL2.SDL/SDL_BlendOperation
T: SDL2.SDL/SDL_BlendFactor
T: SDL2.SDL/SDL_RendererFlags
T: SDL2.SDL/SDL_RendererFlip
T: SDL2.SDL/SDL_TextureAccess
T: SDL2.SDL/SDL_TextureModulate
T: SDL2.SDL/SDL_RendererInfo
T: SDL2.SDL/SDL_RendererInfo/<texture_formats>__FixedBuffer0
T: SDL2.SDL/SDL_PIXELTYPE_ENUM
T: SDL2.SDL/SDL_PIXELORDER_ENUM
T: SDL2.SDL/SDL_PACKEDLAYOUT_ENUM
T: SDL2.SDL/SDL_Color
T: SDL2.SDL/SDL_Palette
T: SDL2.SDL/SDL_PixelFormat
T: SDL2.SDL/SDL_Point
T: SDL2.SDL/SDL_Rect
T: SDL2.SDL/SDL_Surface
T: SDL2.SDL/SDL_EventType
T: SDL2.SDL/SDL_MouseWheelDirection
T: SDL2.SDL/SDL_GenericEvent
T: SDL2.SDL/SDL_WindowEvent
T: SDL2.SDL/SDL_KeyboardEvent
T: SDL2.SDL/SDL_TextEditingEvent
T: SDL2.SDL/SDL_TextEditingEvent/<text>__FixedBuffer1
T: SDL2.SDL/SDL_TextInputEvent
T: SDL2.SDL/SDL_TextInputEvent/<text>__FixedBuffer2
T: SDL2.SDL/SDL_MouseMotionEvent
T: SDL2.SDL/SDL_MouseButtonEvent
T: SDL2.SDL/SDL_MouseWheelEvent
T: SDL2.SDL/SDL_JoyAxisEvent
T: SDL2.SDL/SDL_JoyBallEvent
T: SDL2.SDL/SDL_JoyHatEvent
T: SDL2.SDL/SDL_JoyButtonEvent
T: SDL2.SDL/SDL_JoyDeviceEvent
T: SDL2.SDL/SDL_ControllerAxisEvent
T: SDL2.SDL/SDL_ControllerButtonEvent
T: SDL2.SDL/SDL_ControllerDeviceEvent
T: SDL2.SDL/SDL_AudioDeviceEvent
T: SDL2.SDL/SDL_TouchFingerEvent
T: SDL2.SDL/SDL_MultiGestureEvent
T: SDL2.SDL/SDL_DollarGestureEvent
T: SDL2.SDL/SDL_DropEvent
T: SDL2.SDL/SDL_QuitEvent
T: SDL2.SDL/SDL_UserEvent
T: SDL2.SDL/SDL_SysWMEvent
T: SDL2.SDL/SDL_Event
T: SDL2.SDL/SDL_EventFilter
T: SDL2.SDL/SDL_eventaction
T: SDL2.SDL/SDL_Scancode
T: SDL2.SDL/SDL_Keycode
T: SDL2.SDL/SDL_Keymod
T: SDL2.SDL/SDL_Keysym
T: SDL2.SDL/SDL_SystemCursor
T: SDL2.SDL/SDL_Finger
T: SDL2.SDL/SDL_JoystickPowerLevel
T: SDL2.SDL/SDL_JoystickType
T: SDL2.SDL/SDL_GameControllerBindType
T: SDL2.SDL/SDL_GameControllerAxis
T: SDL2.SDL/SDL_GameControllerButton
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_hat
T: SDL2.SDL/INTERNAL_GameControllerButtonBind_union
T: SDL2.SDL/SDL_GameControllerButtonBind
T: SDL2.SDL/SDL_HapticDirection
T: SDL2.SDL/SDL_HapticDirection/<dir>__FixedBuffer3
T: SDL2.SDL/SDL_HapticConstant
T: SDL2.SDL/SDL_HapticPeriodic
T: SDL2.SDL/SDL_HapticCondition
T: SDL2.SDL/SDL_HapticCondition/<right_sat>__FixedBuffer4
T: SDL2.SDL/SDL_HapticCondition/<left_sat>__FixedBuffer5
T: SDL2.SDL/SDL_HapticCondition/<right_coeff>__FixedBuffer6
T: SDL2.SDL/SDL_HapticCondition/<left_coeff>__FixedBuffer7
T: SDL2.SDL/SDL_HapticCondition/<deadband>__FixedBuffer8
T: SDL2.SDL/SDL_HapticCondition/<center>__FixedBuffer9
T: SDL2.SDL/SDL_HapticRamp
T: SDL2.SDL/SDL_HapticLeftRight
T: SDL2.SDL/SDL_HapticCustom
T: SDL2.SDL/SDL_HapticEffect
T: SDL2.SDL/SDL_AudioStatus
T: SDL2.SDL/SDL_AudioSpec
T: SDL2.SDL/SDL_AudioCallback
T: SDL2.SDL/SDL_TimerCallback
T: SDL2.SDL/SDL_SYSWM_TYPE
T: SDL2.SDL/INTERNAL_windows_wminfo
T: SDL2.SDL/INTERNAL_winrt_wminfo
T: SDL2.SDL/INTERNAL_x11_wminfo
T: SDL2.SDL/INTERNAL_directfb_wminfo
T: SDL2.SDL/INTERNAL_cocoa_wminfo
T: SDL2.SDL/INTERNAL_uikit_wminfo
T: SDL2.SDL/INTERNAL_wayland_wminfo
T: SDL2.SDL/INTERNAL_mir_wminfo
T: SDL2.SDL/INTERNAL_android_wminfo
T: SDL2.SDL/INTERNAL_SysWMDriverUnion
T: SDL2.SDL/SDL_SysWMinfo
T: SDL2.SDL/SDL_PowerState
T: SDL2.SDL_image/IMG_InitFlags
T: SDL2.SDL_mixer/MIX_InitFlags
T: SDL2.SDL_mixer/Mix_Fading
T: SDL2.SDL_mixer/Mix_MusicType
T: SDL2.SDL_mixer/MixFuncDelegate
T: SDL2.SDL_mixer/Mix_EffectFunc_t
T: SDL2.SDL_mixer/Mix_EffectDone_t
T: SDL2.SDL_mixer/MusicFinishedDelegate
T: SDL2.SDL_mixer/ChannelFinishedDelegate
T: SDL2.SDL_mixer/SoundFontDelegate

R: Gendarme.Rules.Interoperability.CentralizePInvokesIntoNativeMethodsTypeRule
M: System.IntPtr SDL2.SDL::SDL_malloc(System.IntPtr)
M: System.Void SDL2.SDL::SDL_free(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_RWFromFile(System.Byte[],System.Byte[])
M: System.IntPtr SDL2.SDL::SDL_RWFromMem(System.IntPtr,System.Int32)
M: System.Void SDL2.SDL::SDL_SetMainReady()
M: System.Int32 SDL2.SDL::SDL_WinRTRunApp(SDL2.SDL/SDL_WinRT_mainFunction,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_Init(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_InitSubSystem(System.UInt32)
M: System.Void SDL2.SDL::SDL_Quit()
M: System.Void SDL2.SDL::SDL_QuitSubSystem(System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_WasInit(System.UInt32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetPlatform()
M: System.Void SDL2.SDL::SDL_ClearHints()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetHint(System.Byte[])
M: SDL2.SDL/SDL_bool SDL2.SDL::INTERNAL_SDL_SetHint(System.Byte[],System.Byte[])
M: SDL2.SDL/SDL_bool SDL2.SDL::INTERNAL_SDL_SetHintWithPriority(System.Byte[],System.Byte[],SDL2.SDL/SDL_HintPriority)
M: SDL2.SDL/SDL_bool SDL2.SDL::INTERNAL_SDL_GetHintBoolean(System.Byte[],SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::SDL_ClearError()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetError()
M: System.Void SDL2.SDL::INTERNAL_SDL_SetError(System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_Log(System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogVerbose(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogDebug(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogInfo(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogWarn(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogError(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogCritical(System.Int32,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogMessage(System.Int32,SDL2.SDL/SDL_LogPriority,System.Byte[])
M: System.Void SDL2.SDL::INTERNAL_SDL_LogMessageV(System.Int32,SDL2.SDL/SDL_LogPriority,System.Byte[])
M: SDL2.SDL/SDL_LogPriority SDL2.SDL::SDL_LogGetPriority(System.Int32)
M: System.Void SDL2.SDL::SDL_LogSetPriority(System.Int32,SDL2.SDL/SDL_LogPriority)
M: System.Void SDL2.SDL::SDL_LogSetAllPriority(SDL2.SDL/SDL_LogPriority)
M: System.Void SDL2.SDL::SDL_LogResetPriorities()
M: System.Void SDL2.SDL::SDL_LogGetOutputFunction(System.IntPtr&,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_LogSetOutputFunction(SDL2.SDL/SDL_LogOutputFunction,System.IntPtr)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_ShowMessageBox(SDL2.SDL/INTERNAL_SDL_MessageBoxData&,System.Int32&)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_ShowSimpleMessageBox(SDL2.SDL/SDL_MessageBoxFlags,System.Byte[],System.Byte[],System.IntPtr)
M: System.Void SDL2.SDL::SDL_GetVersion(SDL2.SDL/SDL_version&)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetRevision()
M: System.Int32 SDL2.SDL::SDL_GetRevisionNumber()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_CreateWindow(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,SDL2.SDL/SDL_WindowFlags)
M: System.Int32 SDL2.SDL::SDL_CreateWindowAndRenderer(System.Int32,System.Int32,SDL2.SDL/SDL_WindowFlags,System.IntPtr&,System.IntPtr&)
M: System.IntPtr SDL2.SDL::SDL_CreateWindowFrom(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DisableScreenSaver()
M: System.Void SDL2.SDL::SDL_EnableScreenSaver()
M: System.IntPtr SDL2.SDL::SDL_GetClosestDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_GetCurrentDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetCurrentVideoDriver()
M: System.Int32 SDL2.SDL::SDL_GetDesktopDisplayMode(System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetDisplayName(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetDisplayBounds(System.Int32,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayDPI(System.Int32,System.Single&,System.Single&,System.Single&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayMode(System.Int32,System.Int32,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_GetDisplayUsableBounds(System.Int32,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetNumDisplayModes(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumVideoDisplays()
M: System.Int32 SDL2.SDL::SDL_GetNumVideoDrivers()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetVideoDriver(System.Int32)
M: System.Single SDL2.SDL::SDL_GetWindowBrightness(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowOpacity(System.IntPtr,System.Single)
M: System.Int32 SDL2.SDL::SDL_GetWindowOpacity(System.IntPtr,System.Single&)
M: System.Int32 SDL2.SDL::SDL_SetWindowModalFor(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowInputFocus(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetWindowData(System.IntPtr,System.Byte[])
M: System.Int32 SDL2.SDL::SDL_GetWindowDisplayIndex(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetWindowDisplayMode(System.IntPtr,SDL2.SDL/SDL_DisplayMode&)
M: System.UInt32 SDL2.SDL::SDL_GetWindowFlags(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetWindowFromID(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_GetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetWindowGrab(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetWindowID(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetWindowPixelFormat(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GetWindowMaximumSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowMinimumSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowPosition(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_GetWindowSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL::SDL_GetWindowSurface(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetWindowTitle(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GL_BindTexture(System.IntPtr,System.Single&,System.Single&)
M: System.IntPtr SDL2.SDL::SDL_GL_CreateContext(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GL_DeleteContext(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GL_GetProcAddress(System.Byte[])
M: System.IntPtr SDL2.SDL::SDL_GL_GetProcAddress(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::INTERNAL_SDL_GL_ExtensionSupported(System.Byte[])
M: System.Void SDL2.SDL::SDL_GL_ResetAttributes()
M: System.Int32 SDL2.SDL::SDL_GL_GetAttribute(SDL2.SDL/SDL_GLattr,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GL_GetSwapInterval()
M: System.Int32 SDL2.SDL::SDL_GL_MakeCurrent(System.IntPtr,System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GL_GetCurrentWindow()
M: System.IntPtr SDL2.SDL::SDL_GL_GetCurrentContext()
M: System.Void SDL2.SDL::SDL_GL_GetDrawableSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GL_SetAttribute(SDL2.SDL/SDL_GLattr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_GL_SetSwapInterval(System.Int32)
M: System.Void SDL2.SDL::SDL_GL_SwapWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GL_UnbindTexture(System.IntPtr)
M: System.Void SDL2.SDL::SDL_HideWindow(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsScreenSaverEnabled()
M: System.Void SDL2.SDL::SDL_MaximizeWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_MinimizeWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_RaiseWindow(System.IntPtr)
M: System.Void SDL2.SDL::SDL_RestoreWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowBrightness(System.IntPtr,System.Single)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_SetWindowData(System.IntPtr,System.Byte[],System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetWindowDisplayMode(System.IntPtr,SDL2.SDL/SDL_DisplayMode&)
M: System.Int32 SDL2.SDL::SDL_SetWindowFullscreen(System.IntPtr,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_SetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])
M: System.Void SDL2.SDL::SDL_SetWindowGrab(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::SDL_SetWindowIcon(System.IntPtr,System.IntPtr)
M: System.Void SDL2.SDL::SDL_SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowPosition(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowSize(System.IntPtr,System.Int32,System.Int32)
M: System.Void SDL2.SDL::SDL_SetWindowBordered(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_GetWindowBordersSize(System.IntPtr,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_SetWindowResizable(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Void SDL2.SDL::INTERNAL_SDL_SetWindowTitle(System.IntPtr,System.Byte[])
M: System.Void SDL2.SDL::SDL_ShowWindow(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateWindowSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateWindowSurfaceRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_VideoInit(System.Byte[])
M: System.Void SDL2.SDL::SDL_VideoQuit()
M: System.Int32 SDL2.SDL::SDL_SetWindowHitTest(System.IntPtr,SDL2.SDL/SDL_HitTest,System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetGrabbedWindow()
M: SDL2.SDL/SDL_BlendMode SDL2.SDL::SDL_ComposeCustomBlendMode(SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendOperation,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendFactor,SDL2.SDL/SDL_BlendOperation)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_Vulkan_LoadLibrary(System.Byte[])
M: System.IntPtr SDL2.SDL::SDL_Vulkan_GetVkGetInstanceProcAddr()
M: System.Void SDL2.SDL::SDL_Vulkan_UnloadLibrary()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32&,System.IntPtr[])
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_Vulkan_CreateSurface(System.IntPtr,System.IntPtr,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_Vulkan_GetDrawableSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL::SDL_CreateRenderer(System.IntPtr,System.Int32,SDL2.SDL/SDL_RendererFlags)
M: System.IntPtr SDL2.SDL::SDL_CreateSoftwareRenderer(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_CreateTexture(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateTextureFromSurface(System.IntPtr,System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyRenderer(System.IntPtr)
M: System.Void SDL2.SDL::SDL_DestroyTexture(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetNumRenderDrivers()
M: System.Int32 SDL2.SDL::SDL_GetRenderDrawBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetRenderDrawColor(System.IntPtr,System.Byte&,System.Byte&,System.Byte&,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetRenderDriverInfo(System.Int32,SDL2.SDL/SDL_RendererInfo&)
M: System.IntPtr SDL2.SDL::SDL_GetRenderer(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GetRendererInfo(System.IntPtr,SDL2.SDL/SDL_RendererInfo&)
M: System.Int32 SDL2.SDL::SDL_GetRendererOutputSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GetTextureAlphaMod(System.IntPtr,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetTextureBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetTextureColorMod(System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_LockTexture(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_LockTexture(System.IntPtr,System.IntPtr,System.IntPtr&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_QueryTexture(System.IntPtr,System.UInt32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_RenderClear(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,SDL2.SDL/SDL_Point&,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,SDL2.SDL/SDL_RendererFlip)
M: System.Int32 SDL2.SDL::SDL_RenderDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawLines(System.IntPtr,SDL2.SDL/SDL_Point[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawPoint(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawPoints(System.IntPtr,SDL2.SDL/SDL_Point[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderDrawRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderFillRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderFillRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderFillRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32)
M: System.Void SDL2.SDL::SDL_RenderGetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_RenderGetLogicalSize(System.IntPtr,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_RenderGetScale(System.IntPtr,System.Single&,System.Single&)
M: System.Int32 SDL2.SDL::SDL_RenderGetViewport(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_RenderPresent(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderReadPixels(System.IntPtr,SDL2.SDL/SDL_Rect&,System.UInt32,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderSetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_RenderSetClipRect(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_RenderSetLogicalSize(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_RenderSetScale(System.IntPtr,System.Single,System.Single)
M: System.Int32 SDL2.SDL::SDL_RenderSetIntegerScale(System.IntPtr,SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_RenderSetViewport(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_SetRenderDrawBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetRenderTarget(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetTextureAlphaMod(System.IntPtr,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetTextureBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.Void SDL2.SDL::SDL_UnlockTexture(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpdateTexture(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_UpdateTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RenderTargetSupported(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetRenderTarget(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RenderIsClipEnabled(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_AllocFormat(System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_AllocPalette(System.Int32)
M: System.Void SDL2.SDL::SDL_CalculateGammaRamp(System.Single,System.UInt16[])
M: System.Void SDL2.SDL::SDL_FreeFormat(System.IntPtr)
M: System.Void SDL2.SDL::SDL_FreePalette(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetPixelFormatName(System.UInt32)
M: System.Void SDL2.SDL::SDL_GetRGB(System.UInt32,System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.Void SDL2.SDL::SDL_GetRGBA(System.UInt32,System.IntPtr,System.Byte&,System.Byte&,System.Byte&,System.Byte&)
M: System.UInt32 SDL2.SDL::SDL_MapRGB(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.UInt32 SDL2.SDL::SDL_MapRGBA(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)
M: System.UInt32 SDL2.SDL::SDL_MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_PixelFormatEnumToMasks(System.UInt32,System.Int32&,System.UInt32&,System.UInt32&,System.UInt32&,System.UInt32&)
M: System.Int32 SDL2.SDL::SDL_SetPaletteColors(System.IntPtr,SDL2.SDL/SDL_Color[],System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SetPixelFormatPalette(System.IntPtr,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_EnclosePoints(SDL2.SDL/SDL_Point[],System.Int32,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasIntersection(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRectAndLine(SDL2.SDL/SDL_Rect&,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_UnionRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_ConvertPixels(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_ConvertSurface(System.IntPtr,System.IntPtr,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_ConvertSurfaceFormat(System.IntPtr,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceWithFormat(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceWithFormatFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRect(System.IntPtr,SDL2.SDL/SDL_Rect&,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRect(System.IntPtr,System.IntPtr,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_FillRects(System.IntPtr,SDL2.SDL/SDL_Rect[],System.Int32,System.UInt32)
M: System.Void SDL2.SDL::SDL_FreeSurface(System.IntPtr)
M: System.Void SDL2.SDL::SDL_GetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_GetColorKey(System.IntPtr,System.UInt32&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceAlphaMod(System.IntPtr,System.Byte&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode&)
M: System.Int32 SDL2.SDL::SDL_GetSurfaceColorMod(System.IntPtr,System.Byte&,System.Byte&,System.Byte&)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_LoadBMP_RW(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_LockSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_LowerBlit(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_LowerBlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_SaveBMP_RW(System.IntPtr,System.IntPtr,System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_SetClipRect(System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_SetColorKey(System.IntPtr,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceAlphaMod(System.IntPtr,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceBlendMode(System.IntPtr,SDL2.SDL/SDL_BlendMode)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL::SDL_SetSurfacePalette(System.IntPtr,System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_SetSurfaceRLE(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SoftStretch(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Void SDL2.SDL::SDL_UnlockSurface(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_UpperBlit(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.Int32 SDL2.SDL::SDL_UpperBlitScaled(System.IntPtr,SDL2.SDL/SDL_Rect&,System.IntPtr,SDL2.SDL/SDL_Rect&)
M: System.IntPtr SDL2.SDL::SDL_DuplicateSurface(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasClipboardText()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetClipboardText()
M: System.Int32 SDL2.SDL::INTERNAL_SDL_SetClipboardText(System.Byte[])
M: System.Void SDL2.SDL::SDL_PumpEvents()
M: System.Int32 SDL2.SDL::SDL_PeepEvents(SDL2.SDL/SDL_Event[],System.Int32,SDL2.SDL/SDL_eventaction,SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasEvent(SDL2.SDL/SDL_EventType)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasEvents(SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: System.Void SDL2.SDL::SDL_FlushEvent(SDL2.SDL/SDL_EventType)
M: System.Void SDL2.SDL::SDL_FlushEvents(SDL2.SDL/SDL_EventType,SDL2.SDL/SDL_EventType)
M: System.Int32 SDL2.SDL::SDL_PollEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEventTimeout(SDL2.SDL/SDL_Event&,System.Int32)
M: System.Int32 SDL2.SDL::SDL_PushEvent(SDL2.SDL/SDL_Event&)
M: System.Void SDL2.SDL::SDL_SetEventFilter(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetEventFilter(System.IntPtr&,System.IntPtr&)
M: System.Void SDL2.SDL::SDL_AddEventWatch(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Void SDL2.SDL::SDL_DelEventWatch(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Void SDL2.SDL::SDL_FilterEvents(SDL2.SDL/SDL_EventFilter,System.IntPtr)
M: System.Byte SDL2.SDL::SDL_EventState(SDL2.SDL/SDL_EventType,System.Int32)
M: System.UInt32 SDL2.SDL::SDL_RegisterEvents(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_GetKeyboardFocus()
M: System.IntPtr SDL2.SDL::SDL_GetKeyboardState(System.Int32&)
M: SDL2.SDL/SDL_Keymod SDL2.SDL::SDL_GetModState()
M: System.Void SDL2.SDL::SDL_SetModState(SDL2.SDL/SDL_Keymod)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::SDL_GetKeyFromScancode(SDL2.SDL/SDL_Scancode)
M: SDL2.SDL/SDL_Scancode SDL2.SDL::SDL_GetScancodeFromKey(SDL2.SDL/SDL_Keycode)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetScancodeName(SDL2.SDL/SDL_Scancode)
M: SDL2.SDL/SDL_Scancode SDL2.SDL::INTERNAL_SDL_GetScancodeFromName(System.Byte[])
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetKeyName(SDL2.SDL/SDL_Keycode)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::INTERNAL_SDL_GetKeyFromName(System.Byte[])
M: System.Void SDL2.SDL::SDL_StartTextInput()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsTextInputActive()
M: System.Void SDL2.SDL::SDL_StopTextInput()
M: System.Void SDL2.SDL::SDL_SetTextInputRect(SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasScreenKeyboardSupport()
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsScreenKeyboardShown(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetMouseFocus()
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.Int32&,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.IntPtr,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.Int32&,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetMouseState(System.IntPtr,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.Int32&,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.IntPtr,System.Int32&)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.Int32&,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetGlobalMouseState(System.IntPtr,System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_GetRelativeMouseState(System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_WarpMouseInWindow(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_WarpMouseGlobal(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_SetRelativeMouseMode(SDL2.SDL/SDL_bool)
M: System.Int32 SDL2.SDL::SDL_CaptureMouse(SDL2.SDL/SDL_bool)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetRelativeMouseMode()
M: System.IntPtr SDL2.SDL::SDL_CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateColorCursor(System.IntPtr,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL::SDL_CreateSystemCursor(SDL2.SDL/SDL_SystemCursor)
M: System.Void SDL2.SDL::SDL_SetCursor(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GetCursor()
M: System.Void SDL2.SDL::SDL_FreeCursor(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_ShowCursor(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumTouchDevices()
M: System.Int64 SDL2.SDL::SDL_GetTouchDevice(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumTouchFingers(System.Int64)
M: System.IntPtr SDL2.SDL::SDL_GetTouchFinger(System.Int64,System.Int32)
M: System.Void SDL2.SDL::SDL_JoystickClose(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickEventState(System.Int32)
M: System.Int16 SDL2.SDL::SDL_JoystickGetAxis(System.IntPtr,System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_JoystickGetAxisInitialState(System.IntPtr,System.Int32,System.UInt16&)
M: System.Int32 SDL2.SDL::SDL_JoystickGetBall(System.IntPtr,System.Int32,System.Int32&,System.Int32&)
M: System.Byte SDL2.SDL::SDL_JoystickGetButton(System.IntPtr,System.Int32)
M: System.Byte SDL2.SDL::SDL_JoystickGetHat(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_JoystickName(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_JoystickNameForIndex(System.Int32)
M: System.Int32 SDL2.SDL::SDL_JoystickNumAxes(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumBalls(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumButtons(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickNumHats(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_JoystickOpen(System.Int32)
M: System.Void SDL2.SDL::SDL_JoystickUpdate()
M: System.Int32 SDL2.SDL::SDL_NumJoysticks()
M: System.Guid SDL2.SDL::SDL_JoystickGetDeviceGUID(System.Int32)
M: System.Guid SDL2.SDL::SDL_JoystickGetGUID(System.IntPtr)
M: System.Void SDL2.SDL::SDL_JoystickGetGUIDString(System.Guid,System.Byte[],System.Int32)
M: System.Guid SDL2.SDL::INTERNAL_SDL_JoystickGetGUIDFromString(System.Byte[])
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceVendor(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceProduct(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetDeviceProductVersion(System.Int32)
M: SDL2.SDL/SDL_JoystickType SDL2.SDL::SDL_JoystickGetDeviceType(System.Int32)
M: System.Int32 SDL2.SDL::SDL_JoystickGetDeviceInstanceID(System.Int32)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetVendor(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetProduct(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_JoystickGetProductVersion(System.IntPtr)
M: SDL2.SDL/SDL_JoystickType SDL2.SDL::SDL_JoystickGetType(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_JoystickGetAttached(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_JoystickInstanceID(System.IntPtr)
M: SDL2.SDL/SDL_JoystickPowerLevel SDL2.SDL::SDL_JoystickCurrentPowerLevel(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_JoystickFromInstanceID(System.Int32)
M: System.Void SDL2.SDL::SDL_LockJoysticks()
M: System.Void SDL2.SDL::SDL_UnlockJoysticks()
M: System.Int32 SDL2.SDL::INTERNAL_SDL_GameControllerAddMapping(System.Byte[])
M: System.Int32 SDL2.SDL::SDL_GameControllerNumMappings()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerMappingForIndex(System.Int32)
M: System.Int32 SDL2.SDL::INTERNAL_SDL_GameControllerAddMappingsFromRW(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerMappingForGUID(System.Guid)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerMapping(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IsGameController(System.Int32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerNameForIndex(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_GameControllerOpen(System.Int32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerName(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetVendor(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetProduct(System.IntPtr)
M: System.UInt16 SDL2.SDL::SDL_GameControllerGetProductVersion(System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GameControllerGetAttached(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GameControllerGetJoystick(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_GameControllerEventState(System.Int32)
M: System.Void SDL2.SDL::SDL_GameControllerUpdate()
M: SDL2.SDL/SDL_GameControllerAxis SDL2.SDL::INTERNAL_SDL_GameControllerGetAxisFromString(System.Byte[])
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerGetStringForAxis(SDL2.SDL/SDL_GameControllerAxis)
M: SDL2.SDL/INTERNAL_SDL_GameControllerButtonBind SDL2.SDL::INTERNAL_SDL_GameControllerGetBindForAxis(System.IntPtr,SDL2.SDL/SDL_GameControllerAxis)
M: System.Int16 SDL2.SDL::SDL_GameControllerGetAxis(System.IntPtr,SDL2.SDL/SDL_GameControllerAxis)
M: SDL2.SDL/SDL_GameControllerButton SDL2.SDL::INTERNAL_SDL_GameControllerGetButtonFromString(System.Byte[])
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GameControllerGetStringForButton(SDL2.SDL/SDL_GameControllerButton)
M: SDL2.SDL/INTERNAL_SDL_GameControllerButtonBind SDL2.SDL::INTERNAL_SDL_GameControllerGetBindForButton(System.IntPtr,SDL2.SDL/SDL_GameControllerButton)
M: System.Byte SDL2.SDL::SDL_GameControllerGetButton(System.IntPtr,SDL2.SDL/SDL_GameControllerButton)
M: System.Void SDL2.SDL::SDL_GameControllerClose(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_GameControllerFromInstanceID(System.Int32)
M: System.Void SDL2.SDL::SDL_HapticClose(System.IntPtr)
M: System.Void SDL2.SDL::SDL_HapticDestroyEffect(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticEffectSupported(System.IntPtr,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_HapticGetEffectStatus(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticIndex(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_HapticName(System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticNewEffect(System.IntPtr,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_HapticNumAxes(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticNumEffects(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticNumEffectsPlaying(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_HapticOpen(System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticOpened(System.Int32)
M: System.IntPtr SDL2.SDL::SDL_HapticOpenFromJoystick(System.IntPtr)
M: System.IntPtr SDL2.SDL::SDL_HapticOpenFromMouse()
M: System.Int32 SDL2.SDL::SDL_HapticPause(System.IntPtr)
M: System.UInt32 SDL2.SDL::SDL_HapticQuery(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleInit(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumblePlay(System.IntPtr,System.Single,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleStop(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRumbleSupported(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticRunEffect(System.IntPtr,System.Int32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_HapticSetAutocenter(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticSetGain(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticStopAll(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticStopEffect(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_HapticUnpause(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_HapticUpdateEffect(System.IntPtr,System.Int32,SDL2.SDL/SDL_HapticEffect&)
M: System.Int32 SDL2.SDL::SDL_JoystickIsHaptic(System.IntPtr)
M: System.Int32 SDL2.SDL::SDL_MouseIsHaptic()
M: System.Int32 SDL2.SDL::SDL_NumHaptics()
M: System.Int32 SDL2.SDL::INTERNAL_SDL_AudioInit(System.Byte[])
M: System.Void SDL2.SDL::SDL_AudioQuit()
M: System.Void SDL2.SDL::SDL_CloseAudio()
M: System.Void SDL2.SDL::SDL_CloseAudioDevice(System.UInt32)
M: System.Void SDL2.SDL::SDL_FreeWAV(System.IntPtr)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetAudioDeviceName(System.Int32,System.Int32)
M: SDL2.SDL/SDL_AudioStatus SDL2.SDL::SDL_GetAudioDeviceStatus(System.UInt32)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetAudioDriver(System.Int32)
M: SDL2.SDL/SDL_AudioStatus SDL2.SDL::SDL_GetAudioStatus()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetCurrentAudioDriver()
M: System.Int32 SDL2.SDL::SDL_GetNumAudioDevices(System.Int32)
M: System.Int32 SDL2.SDL::SDL_GetNumAudioDrivers()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_LoadWAV_RW(System.IntPtr,System.Int32,SDL2.SDL/SDL_AudioSpec&,System.IntPtr&,System.UInt32&)
M: System.Void SDL2.SDL::SDL_LockAudio()
M: System.Void SDL2.SDL::SDL_LockAudioDevice(System.UInt32)
M: System.Void SDL2.SDL::SDL_MixAudio(System.Byte[],System.Byte[],System.UInt32,System.Int32)
M: System.Void SDL2.SDL::SDL_MixAudioFormat(System.Byte[],System.Byte[],System.UInt16,System.UInt32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_OpenAudio(SDL2.SDL/SDL_AudioSpec&,SDL2.SDL/SDL_AudioSpec&)
M: System.Int32 SDL2.SDL::SDL_OpenAudio(SDL2.SDL/SDL_AudioSpec&,System.IntPtr)
M: System.UInt32 SDL2.SDL::INTERNAL_SDL_OpenAudioDevice(System.Byte[],System.Int32,SDL2.SDL/SDL_AudioSpec&,SDL2.SDL/SDL_AudioSpec&,System.Int32)
M: System.Void SDL2.SDL::SDL_PauseAudio(System.Int32)
M: System.Void SDL2.SDL::SDL_PauseAudioDevice(System.UInt32,System.Int32)
M: System.Void SDL2.SDL::SDL_UnlockAudio()
M: System.Void SDL2.SDL::SDL_UnlockAudioDevice(System.UInt32)
M: System.Int32 SDL2.SDL::SDL_QueueAudio(System.UInt32,System.IntPtr,System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_DequeueAudio(System.UInt32,System.IntPtr,System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_GetQueuedAudioSize(System.UInt32)
M: System.Void SDL2.SDL::SDL_ClearQueuedAudio(System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_NewAudioStream(System.UInt16,System.Byte,System.Int32,System.UInt16,System.Byte,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamPut(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamGet(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL::SDL_AudioStreamAvailable(System.IntPtr)
M: System.Void SDL2.SDL::SDL_AudioStreamClear(System.IntPtr)
M: System.Void SDL2.SDL::SDL_FreeAudioStream(System.IntPtr)
M: System.Void SDL2.SDL::SDL_Delay(System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_GetTicks()
M: System.UInt64 SDL2.SDL::SDL_GetPerformanceCounter()
M: System.UInt64 SDL2.SDL::SDL_GetPerformanceFrequency()
M: System.Int32 SDL2.SDL::SDL_AddTimer(System.UInt32,SDL2.SDL/SDL_TimerCallback,System.IntPtr)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_RemoveTimer(System.Int32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_GetWindowWMInfo(System.IntPtr,SDL2.SDL/SDL_SysWMinfo&)
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetBasePath()
M: System.IntPtr SDL2.SDL::INTERNAL_SDL_GetPrefPath(System.Byte[],System.Byte[])
M: SDL2.SDL/SDL_PowerState SDL2.SDL::SDL_GetPowerInfo(System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL::SDL_GetCPUCount()
M: System.Int32 SDL2.SDL::SDL_GetSystemRAM()
M: System.IntPtr SDL2.SDL_image::INTERNAL_IMG_Linked_Version()
M: System.Int32 SDL2.SDL_image::IMG_Init(SDL2.SDL_image/IMG_InitFlags)
M: System.Void SDL2.SDL_image::IMG_Quit()
M: System.IntPtr SDL2.SDL_image::INTERNAL_IMG_Load(System.Byte[])
M: System.IntPtr SDL2.SDL_image::IMG_Load_RW(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_image::INTERNAL_IMG_LoadTyped_RW(System.IntPtr,System.Int32,System.Byte[])
M: System.IntPtr SDL2.SDL_image::INTERNAL_IMG_LoadTexture(System.IntPtr,System.Byte[])
M: System.IntPtr SDL2.SDL_image::IMG_LoadTexture_RW(System.IntPtr,System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_image::INTERNAL_IMG_LoadTextureTyped_RW(System.IntPtr,System.IntPtr,System.Int32,System.Byte[])
M: System.IntPtr SDL2.SDL_image::IMG_ReadXPMFromArray(System.String[])
M: System.Int32 SDL2.SDL_image::INTERNAL_IMG_SavePNG(System.IntPtr,System.Byte[])
M: System.Int32 SDL2.SDL_image::IMG_SavePNG_RW(System.IntPtr,System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_image::INTERNAL_IMG_SaveJPG(System.IntPtr,System.Byte[],System.Int32)
M: System.Int32 SDL2.SDL_image::IMG_SaveJPG_RW(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL_mixer::INTERNAL_MIX_Linked_Version()
M: System.Int32 SDL2.SDL_mixer::Mix_Init(SDL2.SDL_mixer/MIX_InitFlags)
M: System.Void SDL2.SDL_mixer::Mix_Quit()
M: System.Int32 SDL2.SDL_mixer::Mix_OpenAudio(System.Int32,System.UInt16,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_AllocateChannels(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_QuerySpec(System.Int32&,System.UInt16&,System.Int32&)
M: System.IntPtr SDL2.SDL_mixer::Mix_LoadWAV_RW(System.IntPtr,System.Int32)
M: System.IntPtr SDL2.SDL_mixer::INTERNAL_Mix_LoadMUS(System.Byte[])
M: System.IntPtr SDL2.SDL_mixer::Mix_QuickLoad_WAV(System.Byte[])
M: System.IntPtr SDL2.SDL_mixer::Mix_QuickLoad_RAW(System.Byte[],System.UInt32)
M: System.Void SDL2.SDL_mixer::Mix_FreeChunk(System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_FreeMusic(System.IntPtr)
M: System.Int32 SDL2.SDL_mixer::Mix_GetNumChunkDecoders()
M: System.IntPtr SDL2.SDL_mixer::INTERNAL_Mix_GetChunkDecoder(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GetNumMusicDecoders()
M: System.IntPtr SDL2.SDL_mixer::INTERNAL_Mix_GetMusicDecoder(System.Int32)
M: SDL2.SDL_mixer/Mix_MusicType SDL2.SDL_mixer::Mix_GetMusicType(System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_SetPostMix(SDL2.SDL_mixer/MixFuncDelegate,System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_HookMusic(SDL2.SDL_mixer/MixFuncDelegate,System.IntPtr)
M: System.Void SDL2.SDL_mixer::Mix_HookMusicFinished(SDL2.SDL_mixer/MusicFinishedDelegate)
M: System.IntPtr SDL2.SDL_mixer::Mix_GetMusicHookData()
M: System.Void SDL2.SDL_mixer::Mix_ChannelFinished(SDL2.SDL_mixer/ChannelFinishedDelegate)
M: System.Int32 SDL2.SDL_mixer::Mix_RegisterEffect(System.Int32,SDL2.SDL_mixer/Mix_EffectFunc_t,SDL2.SDL_mixer/Mix_EffectDone_t,System.IntPtr)
M: System.Int32 SDL2.SDL_mixer::Mix_UnregisterEffect(System.Int32,SDL2.SDL_mixer/Mix_EffectFunc_t)
M: System.Int32 SDL2.SDL_mixer::Mix_UnregisterAllEffects(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_SetPanning(System.Int32,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetPosition(System.Int32,System.Int16,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetDistance(System.Int32,System.Byte)
M: System.Int32 SDL2.SDL_mixer::Mix_SetReverseStereo(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_ReserveChannels(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupChannels(System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupAvailable(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupCount(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupOldest(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GroupNewer(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayMusic(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInMusic(System.IntPtr,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInMusicPos(System.IntPtr,System.Int32,System.Int32,System.Double)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeInChannelTimed(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_Volume(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_VolumeChunk(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_VolumeMusic(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltChannel(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltGroup(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_HaltMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_ExpireChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutChannel(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutGroup(System.Int32,System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_FadeOutMusic(System.Int32)
M: SDL2.SDL_mixer/Mix_Fading SDL2.SDL_mixer::Mix_FadingMusic()
M: SDL2.SDL_mixer/Mix_Fading SDL2.SDL_mixer::Mix_FadingChannel(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_Pause(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_Resume(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_Paused(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_PauseMusic()
M: System.Void SDL2.SDL_mixer::Mix_ResumeMusic()
M: System.Void SDL2.SDL_mixer::Mix_RewindMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_PausedMusic()
M: System.Int32 SDL2.SDL_mixer::Mix_SetMusicPosition(System.Double)
M: System.Int32 SDL2.SDL_mixer::Mix_Playing(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_PlayingMusic()
M: System.Int32 SDL2.SDL_mixer::INTERNAL_Mix_SetMusicCMD(System.Byte[])
M: System.Int32 SDL2.SDL_mixer::Mix_SetSynchroValue(System.Int32)
M: System.Int32 SDL2.SDL_mixer::Mix_GetSynchroValue()
M: System.Int32 SDL2.SDL_mixer::INTERNAL_Mix_SetSoundFonts(System.Byte[])
M: System.IntPtr SDL2.SDL_mixer::INTERNAL_Mix_GetSoundFonts()
M: System.Int32 SDL2.SDL_mixer::Mix_EachSoundFont(SDL2.SDL_mixer/SoundFontDelegate,System.IntPtr)
M: System.IntPtr SDL2.SDL_mixer::Mix_GetChunk(System.Int32)
M: System.Void SDL2.SDL_mixer::Mix_CloseAudio()
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_LinkedVersion()
M: System.Void SDL2.SDL_ttf::TTF_ByteSwappedUNICODE(System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_Init()
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_OpenFont(System.Byte[],System.Int32)
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFontRW(System.IntPtr,System.Int32,System.Int32)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_OpenFontIndex(System.Byte[],System.Int32,System.Int64)
M: System.IntPtr SDL2.SDL_ttf::TTF_OpenFontIndexRW(System.IntPtr,System.Int32,System.Int32,System.Int64)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontStyle(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontStyle(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontOutline(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontOutline(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontHinting(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontHinting(System.IntPtr,System.Int32)
M: System.Int32 SDL2.SDL_ttf::TTF_FontHeight(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontAscent(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontDescent(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontLineSkip(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_GetFontKerning(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_SetFontKerning(System.IntPtr,System.Int32)
M: System.Int64 SDL2.SDL_ttf::TTF_FontFaces(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_FontFaceIsFixedWidth(System.IntPtr)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_FontFaceFamilyName(System.IntPtr)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_FontFaceStyleName(System.IntPtr)
M: System.Int32 SDL2.SDL_ttf::TTF_GlyphIsProvided(System.IntPtr,System.UInt16)
M: System.Int32 SDL2.SDL_ttf::TTF_GlyphMetrics(System.IntPtr,System.UInt16,System.Int32&,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeText(System.IntPtr,System.String,System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::INTERNAL_TTF_SizeUTF8(System.IntPtr,System.Byte[],System.Int32&,System.Int32&)
M: System.Int32 SDL2.SDL_ttf::TTF_SizeUNICODE(System.IntPtr,System.String,System.Int32&,System.Int32&)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Solid(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_RenderUTF8_Solid(System.IntPtr,System.Byte[],SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Solid(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Solid(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Shaded(System.IntPtr,System.String,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_RenderUTF8_Shaded(System.IntPtr,System.Byte[],SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Shaded(System.IntPtr,System.String,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Shaded(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Blended(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_RenderUTF8_Blended(System.IntPtr,System.Byte[],SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Blended(System.IntPtr,System.String,SDL2.SDL/SDL_Color)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderText_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::INTERNAL_TTF_RenderUTF8_Blended_Wrapped(System.IntPtr,System.Byte[],SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderUNICODE_Blended_Wrapped(System.IntPtr,System.String,SDL2.SDL/SDL_Color,System.UInt32)
M: System.IntPtr SDL2.SDL_ttf::TTF_RenderGlyph_Blended(System.IntPtr,System.UInt16,SDL2.SDL/SDL_Color)
M: System.Void SDL2.SDL_ttf::TTF_CloseFont(System.IntPtr)
M: System.Void SDL2.SDL_ttf::TTF_Quit()
M: System.Int32 SDL2.SDL_ttf::TTF_WasInit()
M: System.Int32 SDL2.SDL_ttf::SDL_GetFontKerningSize(System.IntPtr,System.Int32,System.Int32)

R: Gendarme.Rules.Naming.DoNotPrefixValuesWithEnumNameRule
T: SDL2.SDL/SDL_BlendMode
T: SDL2.SDL/SDL_BlendOperation
T: SDL2.SDL/SDL_BlendFactor
T: SDL2.SDL/SDL_TextureAccess
T: SDL2.SDL/SDL_TextureModulate
T: SDL2.SDL/SDL_Scancode
T: SDL2.SDL/SDL_PowerState
T: SDL2.SDL_mixer/Mix_Fading

R: Gendarme.Rules.Naming.DoNotUseReservedInEnumValueNamesRule
T: SDL2.SDL/SDL_Keymod

R: Gendarme.Rules.Design.EnumsShouldUseInt32Rule
T: SDL2.SDL/SDL_MessageBoxFlags
T: SDL2.SDL/SDL_MessageBoxButtonFlags
T: SDL2.SDL/SDL_WindowEventID
T: SDL2.SDL/SDL_WindowFlags
T: SDL2.SDL/SDL_RendererFlags
T: SDL2.SDL/SDL_EventType
T: SDL2.SDL/SDL_MouseWheelDirection
T: SDL2.SDL/SDL_Keymod

R: Gendarme.Rules.Design.FlagsShouldNotDefineAZeroValueRule
T: SDL2.SDL/SDL_BlendMode
T: SDL2.SDL/SDL_RendererFlip
T: SDL2.SDL/SDL_TextureModulate

R: Gendarme.Rules.Design.MarkAssemblyWithAssemblyVersionRule
A: SDL2-CS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null

R: Gendarme.Rules.Design.MarkAssemblyWithCLSCompliantRule
A: SDL2-CS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null

R: Gendarme.Rules.Design.MarkAssemblyWithComVisibleRule
A: SDL2-CS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null

R: Gendarme.Rules.Security.NativeFieldsShouldNotBeVisibleRule
T: SDL2.SDL/SDL_MessageBoxData
T: SDL2.SDL/SDL_DisplayMode
T: SDL2.SDL/SDL_RendererInfo
T: SDL2.SDL/SDL_Palette
T: SDL2.SDL/SDL_PixelFormat
T: SDL2.SDL/SDL_Surface
T: SDL2.SDL/SDL_DropEvent
T: SDL2.SDL/SDL_UserEvent
T: SDL2.SDL/SDL_SysWMEvent
T: SDL2.SDL/SDL_HapticCustom
T: SDL2.SDL/SDL_AudioSpec
T: SDL2.SDL/INTERNAL_windows_wminfo
T: SDL2.SDL/INTERNAL_winrt_wminfo
T: SDL2.SDL/INTERNAL_x11_wminfo
T: SDL2.SDL/INTERNAL_directfb_wminfo
T: SDL2.SDL/INTERNAL_cocoa_wminfo
T: SDL2.SDL/INTERNAL_uikit_wminfo
T: SDL2.SDL/INTERNAL_wayland_wminfo
T: SDL2.SDL/INTERNAL_mir_wminfo
T: SDL2.SDL/INTERNAL_android_wminfo

R: Gendarme.Rules.Performance.PreferLiteralOverInitOnlyFieldsRule
T: SDL2.SDL
T: SDL2.SDL_mixer

R: Gendarme.Rules.Naming.UseCorrectCasingRule
M: System.UInt32 SDL2.SDL::SDL_FOURCC(System.Byte,System.Byte,System.Byte,System.Byte)
M: System.Int32 SDL2.SDL::SDL_VERSIONNUM(System.Int32,System.Int32,System.Int32)
M: System.Boolean SDL2.SDL::SDL_VERSION_ATLEAST(System.Int32,System.Int32,System.Int32)
M: System.Int32 SDL2.SDL::SDL_WINDOWPOS_UNDEFINED_DISPLAY(System.Int32)
M: System.Boolean SDL2.SDL::SDL_WINDOWPOS_ISUNDEFINED(System.Int32)
M: System.Int32 SDL2.SDL::SDL_WINDOWPOS_CENTERED_DISPLAY(System.Int32)
M: System.Boolean SDL2.SDL::SDL_WINDOWPOS_ISCENTERED(System.Int32)
M: System.UInt32 SDL2.SDL::SDL_DEFINE_PIXELFOURCC(System.Byte,System.Byte,System.Byte,System.Byte)
M: System.Byte SDL2.SDL::SDL_PIXELFLAG(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELTYPE(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELORDER(System.UInt32)
M: System.Byte SDL2.SDL::SDL_PIXELLAYOUT(System.UInt32)
M: System.Byte SDL2.SDL::SDL_BITSPERPIXEL(System.UInt32)
M: System.Byte SDL2.SDL::SDL_BYTESPERPIXEL(System.UInt32)
M: System.UInt32 SDL2.SDL::SDL_MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_PixelFormatEnumToMasks(System.UInt32,System.Int32&,System.UInt32&,System.UInt32&,System.UInt32&,System.UInt32&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_HasIntersection(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: SDL2.SDL/SDL_bool SDL2.SDL::SDL_IntersectRectAndLine(SDL2.SDL/SDL_Rect&,System.Int32&,System.Int32&,System.Int32&,System.Int32&)
M: System.Void SDL2.SDL::SDL_UnionRect(SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&,SDL2.SDL/SDL_Rect&)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.IntPtr SDL2.SDL::SDL_CreateRGBSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)
M: System.Int32 SDL2.SDL::SDL_PollEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEvent(SDL2.SDL/SDL_Event&)
M: System.Int32 SDL2.SDL::SDL_WaitEventTimeout(SDL2.SDL/SDL_Event&,System.Int32)
M: System.Int32 SDL2.SDL::SDL_PushEvent(SDL2.SDL/SDL_Event&)
M: SDL2.SDL/SDL_Keycode SDL2.SDL::SDL_SCANCODE_TO_KEYCODE(SDL2.SDL/SDL_Scancode)
M: System.UInt32 SDL2.SDL::SDL_BUTTON(System.UInt32)
M: System.Boolean SDL2.SDL::SDL_TICKS_PASSED(System.UInt32,System.UInt32)
M: System.Void SDL2.SDL_image::SDL_IMAGE_VERSION(SDL2.SDL/SDL_version&)
M: System.Void SDL2.SDL_mixer::SDL_MIXER_VERSION(SDL2.SDL/SDL_version&)
M: System.Void SDL2.SDL_ttf::SDL_TTF_VERSION(SDL2.SDL/SDL_version&)

R: Gendarme.Rules.Naming.UseCorrectSuffixRule
T: SDL2.SDL/SDL_MessageBoxFlags
T: SDL2.SDL/SDL_MessageBoxButtonFlags
T: SDL2.SDL/SDL_WindowFlags
T: SDL2.SDL/SDL_RendererFlags
T: SDL2.SDL/SDL_PIXELTYPE_ENUM
T: SDL2.SDL/SDL_PIXELORDER_ENUM
T: SDL2.SDL/SDL_PACKEDLAYOUT_ENUM
T: SDL2.SDL/SDL_HapticCondition
T: SDL2.SDL_image/IMG_InitFlags
T: SDL2.SDL_mixer/MIX_InitFlags
T: SDL2.SDL_mixer/MixFuncDelegate
T: SDL2.SDL_mixer/MusicFinishedDelegate
T: SDL2.SDL_mixer/ChannelFinishedDelegate
T: SDL2.SDL_mixer/SoundFontDelegate

R: Gendarme.Rules.Naming.UsePreferredTermsRule
M: System.Void SDL2.SDL::SDL_LogInfo(System.Int32,System.String)
T: SDL2.SDL/SDL_LogOutputFunction

R: Gendarme.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsRule
T: SDL2.SDL/SDL_TextureAccess
T: SDL2.SDL/SDL_GameControllerAxis
T: SDL2.SDL/SDL_AudioStatus

